package com.ash93.esp32_ble_provisioning_plugin.ESPProvision.espressif;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sec0.proto

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: constants.proto

//import com.google.protobuf.*;

import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageLite;
import com.google.protobuf.Internal;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.MessageLiteOrBuilder;
import com.google.protobuf.Parser;

public final class Sec0 {
  private Sec0() {}
  public static void registerAllExtensions(
      ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code Sec0MsgType}
   */
  public enum Sec0MsgType
      implements Internal.EnumLite {
    /**
     * <code>S0_Session_Command = 0;</code>
     */
    S0_Session_Command(0),
    /**
     * <code>S0_Session_Response = 1;</code>
     */
    S0_Session_Response(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>S0_Session_Command = 0;</code>
     */
    public static final int S0_Session_Command_VALUE = 0;
    /**
     * <code>S0_Session_Response = 1;</code>
     */
    public static final int S0_Session_Response_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Sec0MsgType valueOf(int value) {
      return forNumber(value);
    }

    public static Sec0MsgType forNumber(int value) {
      switch (value) {
        case 0: return S0_Session_Command;
        case 1: return S0_Session_Response;
        default: return null;
      }
    }

    public static Internal.EnumLiteMap<Sec0MsgType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final Internal.EnumLiteMap<
        Sec0MsgType> internalValueMap =
          new Internal.EnumLiteMap<Sec0MsgType>() {
            public Sec0MsgType findValueByNumber(int number) {
              return Sec0MsgType.forNumber(number);
            }
          };

    private final int value;

    private Sec0MsgType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Sec0MsgType)
  }

  public interface S0SessionCmdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:S0SessionCmd)
          MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code S0SessionCmd}
   */
  public  static final class S0SessionCmd extends
          GeneratedMessageLite<
                    S0SessionCmd, S0SessionCmd.Builder> implements
      // @@protoc_insertion_point(message_implements:S0SessionCmd)
      S0SessionCmdOrBuilder {
    private S0SessionCmd() {
    }
    public void writeTo(CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSerializedSize = size;
      return size;
    }

    public static Sec0.S0SessionCmd parseFrom(
        ByteString data)
        throws InvalidProtocolBufferException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Sec0.S0SessionCmd parseFrom(
        ByteString data,
        ExtensionRegistryLite extensionRegistry)
        throws InvalidProtocolBufferException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Sec0.S0SessionCmd parseFrom(byte[] data)
        throws InvalidProtocolBufferException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Sec0.S0SessionCmd parseFrom(
        byte[] data,
        ExtensionRegistryLite extensionRegistry)
        throws InvalidProtocolBufferException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Sec0.S0SessionCmd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Sec0.S0SessionCmd parseFrom(
        java.io.InputStream input,
        ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Sec0.S0SessionCmd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static Sec0.S0SessionCmd parseDelimitedFrom(
        java.io.InputStream input,
        ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Sec0.S0SessionCmd parseFrom(
        CodedInputStream input)
        throws java.io.IOException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Sec0.S0SessionCmd parseFrom(
        CodedInputStream input,
        ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Sec0.S0SessionCmd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code S0SessionCmd}
     */
    public static final class Builder extends
        GeneratedMessageLite.Builder<
          Sec0.S0SessionCmd, Builder> implements
        // @@protoc_insertion_point(builder_implements:S0SessionCmd)
        Sec0.S0SessionCmdOrBuilder {
      // Construct using Sec0.S0SessionCmd.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:S0SessionCmd)
    }
    protected final Object dynamicMethod(
        GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new Sec0.S0SessionCmd();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          Sec0.S0SessionCmd other = (Sec0.S0SessionCmd) arg1;
          if (visitor == GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          CodedInputStream input =
              (CodedInputStream) arg0;
          ExtensionRegistryLite extensionRegistry =
              (ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (Sec0.S0SessionCmd.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:S0SessionCmd)
    private static final Sec0.S0SessionCmd DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S0SessionCmd();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static Sec0.S0SessionCmd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile Parser<S0SessionCmd> PARSER;

    public static Parser<S0SessionCmd> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface S0SessionRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:S0SessionResp)
      MessageLiteOrBuilder {

    /**
     * <code>optional .Status status = 1;</code>
     */
    int getStatusValue();
    /**
     * <code>optional .Status status = 1;</code>
     */
    Constants.Status getStatus();
  }
  /**
   * Protobuf type {@code S0SessionResp}
   */
  public  static final class S0SessionResp extends
      GeneratedMessageLite<
          S0SessionResp, S0SessionResp.Builder> implements
      // @@protoc_insertion_point(message_implements:S0SessionResp)
      S0SessionRespOrBuilder {
    private S0SessionResp() {
    }
    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <code>optional .Status status = 1;</code>
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <code>optional .Status status = 1;</code>
     */
    public Constants.Status getStatus() {
      Constants.Status result = Constants.Status.forNumber(status_);
      return result == null ? Constants.Status.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .Status status = 1;</code>
     */
    private void setStatusValue(int value) {
        status_ = value;
    }
    /**
     * <code>optional .Status status = 1;</code>
     */
    private void setStatus(Constants.Status value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      status_ = value.getNumber();
    }
    /**
     * <code>optional .Status status = 1;</code>
     */
    private void clearStatus() {
      
      status_ = 0;
    }

    public void writeTo(CodedOutputStream output)
                        throws java.io.IOException {
      if (status_ != Constants.Status.Success.getNumber()) {
        output.writeEnum(1, status_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (status_ != Constants.Status.Success.getNumber()) {
        size += CodedOutputStream
          .computeEnumSize(1, status_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static Sec0.S0SessionResp parseFrom(
        ByteString data)
        throws InvalidProtocolBufferException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Sec0.S0SessionResp parseFrom(
        ByteString data,
        ExtensionRegistryLite extensionRegistry)
        throws InvalidProtocolBufferException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Sec0.S0SessionResp parseFrom(byte[] data)
        throws InvalidProtocolBufferException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Sec0.S0SessionResp parseFrom(
        byte[] data,
        ExtensionRegistryLite extensionRegistry)
        throws InvalidProtocolBufferException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Sec0.S0SessionResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Sec0.S0SessionResp parseFrom(
        java.io.InputStream input,
        ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Sec0.S0SessionResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static Sec0.S0SessionResp parseDelimitedFrom(
        java.io.InputStream input,
        ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Sec0.S0SessionResp parseFrom(
        CodedInputStream input)
        throws java.io.IOException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Sec0.S0SessionResp parseFrom(
        CodedInputStream input,
        ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Sec0.S0SessionResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code S0SessionResp}
     */
    public static final class Builder extends
        GeneratedMessageLite.Builder<
          Sec0.S0SessionResp, Builder> implements
        // @@protoc_insertion_point(builder_implements:S0SessionResp)
        Sec0.S0SessionRespOrBuilder {
      // Construct using Sec0.S0SessionResp.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .Status status = 1;</code>
       */
      public int getStatusValue() {
        return instance.getStatusValue();
      }
      /**
       * <code>optional .Status status = 1;</code>
       */
      public Builder setStatusValue(int value) {
        copyOnWrite();
        instance.setStatusValue(value);
        return this;
      }
      /**
       * <code>optional .Status status = 1;</code>
       */
      public Constants.Status getStatus() {
        return instance.getStatus();
      }
      /**
       * <code>optional .Status status = 1;</code>
       */
      public Builder setStatus(Constants.Status value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <code>optional .Status status = 1;</code>
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:S0SessionResp)
    }
    protected final Object dynamicMethod(
        GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new Sec0.S0SessionResp();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          Sec0.S0SessionResp other = (Sec0.S0SessionResp) arg1;
          status_ = visitor.visitInt(status_ != 0, status_,    other.status_ != 0, other.status_);
          if (visitor == GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          CodedInputStream input =
              (CodedInputStream) arg0;
          ExtensionRegistryLite extensionRegistry =
              (ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  status_ = rawValue;
                  break;
                }
              }
            }
          } catch (InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (Sec0.S0SessionResp.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:S0SessionResp)
    private static final Sec0.S0SessionResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new S0SessionResp();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static Sec0.S0SessionResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile Parser<S0SessionResp> PARSER;

    public static Parser<S0SessionResp> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Sec0PayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Sec0Payload)
      MessageLiteOrBuilder {

    /**
     * <code>optional .Sec0MsgType msg = 1;</code>
     */
    int getMsgValue();
    /**
     * <code>optional .Sec0MsgType msg = 1;</code>
     */
    Sec0.Sec0MsgType getMsg();

    /**
     * <code>optional .S0SessionCmd sc = 20;</code>
     */
    Sec0.S0SessionCmd getSc();

    /**
     * <code>optional .S0SessionResp sr = 21;</code>
     */
    Sec0.S0SessionResp getSr();

    public Sec0.Sec0Payload.PayloadCase getPayloadCase();
  }
  /**
   * Protobuf type {@code Sec0Payload}
   */
  public  static final class Sec0Payload extends
      GeneratedMessageLite<
          Sec0Payload, Sec0Payload.Builder> implements
      // @@protoc_insertion_point(message_implements:Sec0Payload)
      Sec0PayloadOrBuilder {
    private Sec0Payload() {
    }
    private int payloadCase_ = 0;
    private java.lang.Object payload_;
    public enum PayloadCase
        implements Internal.EnumLite {
      SC(20),
      SR(21),
      PAYLOAD_NOT_SET(0);
      private final int value;
      private PayloadCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadCase forNumber(int value) {
        switch (value) {
          case 20: return SC;
          case 21: return SR;
          case 0: return PAYLOAD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadCase
    getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    private void clearPayload() {
      payloadCase_ = 0;
      payload_ = null;
    }

    public static final int MSG_FIELD_NUMBER = 1;
    private int msg_;
    /**
     * <code>optional .Sec0MsgType msg = 1;</code>
     */
    public int getMsgValue() {
      return msg_;
    }
    /**
     * <code>optional .Sec0MsgType msg = 1;</code>
     */
    public Sec0.Sec0MsgType getMsg() {
      Sec0.Sec0MsgType result = Sec0.Sec0MsgType.forNumber(msg_);
      return result == null ? Sec0.Sec0MsgType.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .Sec0MsgType msg = 1;</code>
     */
    private void setMsgValue(int value) {
        msg_ = value;
    }
    /**
     * <code>optional .Sec0MsgType msg = 1;</code>
     */
    private void setMsg(Sec0.Sec0MsgType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      msg_ = value.getNumber();
    }
    /**
     * <code>optional .Sec0MsgType msg = 1;</code>
     */
    private void clearMsg() {
      
      msg_ = 0;
    }

    public static final int SC_FIELD_NUMBER = 20;
    /**
     * <code>optional .S0SessionCmd sc = 20;</code>
     */
    public Sec0.S0SessionCmd getSc() {
      if (payloadCase_ == 20) {
         return (Sec0.S0SessionCmd) payload_;
      }
      return Sec0.S0SessionCmd.getDefaultInstance();
    }
    /**
     * <code>optional .S0SessionCmd sc = 20;</code>
     */
    private void setSc(Sec0.S0SessionCmd value) {
      if (value == null) {
        throw new NullPointerException();
      }
      payload_ = value;
      payloadCase_ = 20;
    }
    /**
     * <code>optional .S0SessionCmd sc = 20;</code>
     */
    private void setSc(
        Sec0.S0SessionCmd.Builder builderForValue) {
      payload_ = builderForValue.build();
      payloadCase_ = 20;
    }
    /**
     * <code>optional .S0SessionCmd sc = 20;</code>
     */
    private void mergeSc(Sec0.S0SessionCmd value) {
      if (payloadCase_ == 20 &&
          payload_ != Sec0.S0SessionCmd.getDefaultInstance()) {
        payload_ = Sec0.S0SessionCmd.newBuilder((Sec0.S0SessionCmd) payload_)
            .mergeFrom(value).buildPartial();
      } else {
        payload_ = value;
      }
      payloadCase_ = 20;
    }
    /**
     * <code>optional .S0SessionCmd sc = 20;</code>
     */
    private void clearSc() {
      if (payloadCase_ == 20) {
        payloadCase_ = 0;
        payload_ = null;
      }
    }

    public static final int SR_FIELD_NUMBER = 21;
    /**
     * <code>optional .S0SessionResp sr = 21;</code>
     */
    public Sec0.S0SessionResp getSr() {
      if (payloadCase_ == 21) {
         return (Sec0.S0SessionResp) payload_;
      }
      return Sec0.S0SessionResp.getDefaultInstance();
    }
    /**
     * <code>optional .S0SessionResp sr = 21;</code>
     */
    private void setSr(Sec0.S0SessionResp value) {
      if (value == null) {
        throw new NullPointerException();
      }
      payload_ = value;
      payloadCase_ = 21;
    }
    /**
     * <code>optional .S0SessionResp sr = 21;</code>
     */
    private void setSr(
        Sec0.S0SessionResp.Builder builderForValue) {
      payload_ = builderForValue.build();
      payloadCase_ = 21;
    }
    /**
     * <code>optional .S0SessionResp sr = 21;</code>
     */
    private void mergeSr(Sec0.S0SessionResp value) {
      if (payloadCase_ == 21 &&
          payload_ != Sec0.S0SessionResp.getDefaultInstance()) {
        payload_ = Sec0.S0SessionResp.newBuilder((Sec0.S0SessionResp) payload_)
            .mergeFrom(value).buildPartial();
      } else {
        payload_ = value;
      }
      payloadCase_ = 21;
    }
    /**
     * <code>optional .S0SessionResp sr = 21;</code>
     */
    private void clearSr() {
      if (payloadCase_ == 21) {
        payloadCase_ = 0;
        payload_ = null;
      }
    }

    public void writeTo(CodedOutputStream output)
                        throws java.io.IOException {
      if (msg_ != Sec0.Sec0MsgType.S0_Session_Command.getNumber()) {
        output.writeEnum(1, msg_);
      }
      if (payloadCase_ == 20) {
        output.writeMessage(20, (Sec0.S0SessionCmd) payload_);
      }
      if (payloadCase_ == 21) {
        output.writeMessage(21, (Sec0.S0SessionResp) payload_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (msg_ != Sec0.Sec0MsgType.S0_Session_Command.getNumber()) {
        size += CodedOutputStream
          .computeEnumSize(1, msg_);
      }
      if (payloadCase_ == 20) {
        size += CodedOutputStream
          .computeMessageSize(20, (Sec0.S0SessionCmd) payload_);
      }
      if (payloadCase_ == 21) {
        size += CodedOutputStream
          .computeMessageSize(21, (Sec0.S0SessionResp) payload_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static Sec0.Sec0Payload parseFrom(
        ByteString data)
        throws InvalidProtocolBufferException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Sec0.Sec0Payload parseFrom(
        ByteString data,
        ExtensionRegistryLite extensionRegistry)
        throws InvalidProtocolBufferException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Sec0.Sec0Payload parseFrom(byte[] data)
        throws InvalidProtocolBufferException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Sec0.Sec0Payload parseFrom(
        byte[] data,
        ExtensionRegistryLite extensionRegistry)
        throws InvalidProtocolBufferException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Sec0.Sec0Payload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Sec0.Sec0Payload parseFrom(
        java.io.InputStream input,
        ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Sec0.Sec0Payload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static Sec0.Sec0Payload parseDelimitedFrom(
        java.io.InputStream input,
        ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Sec0.Sec0Payload parseFrom(
        CodedInputStream input)
        throws java.io.IOException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Sec0.Sec0Payload parseFrom(
        CodedInputStream input,
        ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Sec0.Sec0Payload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code Sec0Payload}
     */
    public static final class Builder extends
        GeneratedMessageLite.Builder<
          Sec0.Sec0Payload, Builder> implements
        // @@protoc_insertion_point(builder_implements:Sec0Payload)
        Sec0.Sec0PayloadOrBuilder {
      // Construct using Sec0.Sec0Payload.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public PayloadCase
          getPayloadCase() {
        return instance.getPayloadCase();
      }

      public Builder clearPayload() {
        copyOnWrite();
        instance.clearPayload();
        return this;
      }


      /**
       * <code>optional .Sec0MsgType msg = 1;</code>
       */
      public int getMsgValue() {
        return instance.getMsgValue();
      }
      /**
       * <code>optional .Sec0MsgType msg = 1;</code>
       */
      public Builder setMsgValue(int value) {
        copyOnWrite();
        instance.setMsgValue(value);
        return this;
      }
      /**
       * <code>optional .Sec0MsgType msg = 1;</code>
       */
      public Sec0.Sec0MsgType getMsg() {
        return instance.getMsg();
      }
      /**
       * <code>optional .Sec0MsgType msg = 1;</code>
       */
      public Builder setMsg(Sec0.Sec0MsgType value) {
        copyOnWrite();
        instance.setMsg(value);
        return this;
      }
      /**
       * <code>optional .Sec0MsgType msg = 1;</code>
       */
      public Builder clearMsg() {
        copyOnWrite();
        instance.clearMsg();
        return this;
      }

      /**
       * <code>optional .S0SessionCmd sc = 20;</code>
       */
      public Sec0.S0SessionCmd getSc() {
        return instance.getSc();
      }
      /**
       * <code>optional .S0SessionCmd sc = 20;</code>
       */
      public Builder setSc(Sec0.S0SessionCmd value) {
        copyOnWrite();
        instance.setSc(value);
        return this;
      }
      /**
       * <code>optional .S0SessionCmd sc = 20;</code>
       */
      public Builder setSc(
          Sec0.S0SessionCmd.Builder builderForValue) {
        copyOnWrite();
        instance.setSc(builderForValue);
        return this;
      }
      /**
       * <code>optional .S0SessionCmd sc = 20;</code>
       */
      public Builder mergeSc(Sec0.S0SessionCmd value) {
        copyOnWrite();
        instance.mergeSc(value);
        return this;
      }
      /**
       * <code>optional .S0SessionCmd sc = 20;</code>
       */
      public Builder clearSc() {
        copyOnWrite();
        instance.clearSc();
        return this;
      }

      /**
       * <code>optional .S0SessionResp sr = 21;</code>
       */
      public Sec0.S0SessionResp getSr() {
        return instance.getSr();
      }
      /**
       * <code>optional .S0SessionResp sr = 21;</code>
       */
      public Builder setSr(Sec0.S0SessionResp value) {
        copyOnWrite();
        instance.setSr(value);
        return this;
      }
      /**
       * <code>optional .S0SessionResp sr = 21;</code>
       */
      public Builder setSr(
          Sec0.S0SessionResp.Builder builderForValue) {
        copyOnWrite();
        instance.setSr(builderForValue);
        return this;
      }
      /**
       * <code>optional .S0SessionResp sr = 21;</code>
       */
      public Builder mergeSr(Sec0.S0SessionResp value) {
        copyOnWrite();
        instance.mergeSr(value);
        return this;
      }
      /**
       * <code>optional .S0SessionResp sr = 21;</code>
       */
      public Builder clearSr() {
        copyOnWrite();
        instance.clearSr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Sec0Payload)
    }
    protected final Object dynamicMethod(
        GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new Sec0.Sec0Payload();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          Sec0.Sec0Payload other = (Sec0.Sec0Payload) arg1;
          msg_ = visitor.visitInt(msg_ != 0, msg_,    other.msg_ != 0, other.msg_);
          switch (other.getPayloadCase()) {
            case SC: {
              payload_ = visitor.visitOneofMessage(
                  payloadCase_ == 20,
                  payload_,
                  other.payload_);
              break;
            }
            case SR: {
              payload_ = visitor.visitOneofMessage(
                  payloadCase_ == 21,
                  payload_,
                  other.payload_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              visitor.visitOneofNotSet(payloadCase_ != 0);
              break;
            }
          }
          if (visitor == GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.payloadCase_ != 0) {
              payloadCase_ = other.payloadCase_;
            }
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          CodedInputStream input =
              (CodedInputStream) arg0;
          ExtensionRegistryLite extensionRegistry =
              (ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  msg_ = rawValue;
                  break;
                }
                case 162: {
                  Sec0.S0SessionCmd.Builder subBuilder = null;
                  if (payloadCase_ == 20) {
                    subBuilder = ((Sec0.S0SessionCmd) payload_).toBuilder();
                  }
                  payload_ =
                       input.readMessage(Sec0.S0SessionCmd.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((Sec0.S0SessionCmd) payload_);
                    payload_ = subBuilder.buildPartial();
                  }
                  payloadCase_ = 20;
                  break;
                }
                case 170: {
                  Sec0.S0SessionResp.Builder subBuilder = null;
                  if (payloadCase_ == 21) {
                    subBuilder = ((Sec0.S0SessionResp) payload_).toBuilder();
                  }
                  payload_ =
                       input.readMessage(Sec0.S0SessionResp.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((Sec0.S0SessionResp) payload_);
                    payload_ = subBuilder.buildPartial();
                  }
                  payloadCase_ = 21;
                  break;
                }
              }
            }
          } catch (InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (Sec0.Sec0Payload.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:Sec0Payload)
    private static final Sec0.Sec0Payload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Sec0Payload();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static Sec0.Sec0Payload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile Parser<Sec0Payload> PARSER;

    public static Parser<Sec0Payload> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
